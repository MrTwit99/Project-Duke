package duke.packages;

import java.util.ArrayList;

import duke.Storage;
import duke.Task;
import duke.TaskList;
import duke.Ui;

/**
 * Represents the command for listing tasks in the Duke's taskList and hard disk.
 *
 * @author MrTwit99
 * @since 2023-02-06
 */
public class ListCommand implements Command {

    /**
     * Returns a Tasklist object which is the current taskList after executing the list command and lists out all tasks
     * description and statuses stored in Duke's taskList and hard disk.
     *
     * @param parsedCmd ArrayList of String type that contains parsed information about the task description and
     *                  status generated by Parser.parse().
     * @param tasks Duke's TaskList object that stores all Tasks objects.
     * @param storage Duke's Storage object to allow file access.
     * @param ui Duke's Ui object to display and print messages to the user. Acts as a screen.
     * @return TaskList, containing all tasks after execution of command.
     */
    @Override
    public TaskList execute(ArrayList<String> parsedCmd, TaskList tasks, Storage storage, Ui ui) {
        String message;
        StringBuilder sb = new StringBuilder();
        ArrayList<Task> taskList = tasks.getTaskList();
        sb.append("    ____________________________________________________________\n")
                .append("    Here are the tasks in your list:\n");
        for (int i = 0; i < taskList.size(); i++) {
            sb.append("    ").append(i + 1).append(".").append(taskList.get(i).getTaskInfoStatus())
                    .append("\n");
        }
        sb.append("    ____________________________________________________________\n");
        message = sb.toString();
        sb.setLength(0);
        ui.printCommand(message);
        return tasks;
    }
}
